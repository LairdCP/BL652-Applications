// Copyright (c) 2016, Laird
//
// Permission to use, copy, modify, and/or distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
// SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR
// IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
//
// SPDX-License-Identifier:ISC
//
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++                                                                      ++
// +++++  When UwTerminal downloads the app it will store it as a filenname   ++
// +++++  which consists of all characters up to the first . and excluding it ++
// +++++                                                                      ++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//
//
// This small program configures the development board for minimal
// power consumption by setting various SIO as digital outs and
// closing the UART
//
// After running this application you should see < 2.4uA at the current measurement
// header pins (J7). Remove the jumper and place an ammeter in series.
//
//******************************************************************************

//******************************************************************************
// Definitions
//******************************************************************************

//******************************************************************************
// Library Import
//******************************************************************************

//******************************************************************************
// Global Variable Declarations
//******************************************************************************

dim rc          //Declare rc as a variable (result code)

//******************************************************************************
// Function and Subroutine definitions
//******************************************************************************

//******************************************************************************
// Handler definitions
//******************************************************************************

//******************************************************************************
// Equivalent to main() in C
//******************************************************************************

PRINT "To get the expected low power consumption please remove jumpers J3 and J4 on your DVK-BL652 board."

rc=gpiosetfunc(17,2,0)  //Sets LED 0 to digital out low
rc=gpiosetfunc(19,2,0)  //Sets LED 1 to digital out low
rc=gpiosetfunc(3,2,0)   //Disables the temperature sensor
while (uartinfo(5) > 0)
    //Wait for the UART transmit buffer to empty
endwhile
uartclose()             //Closes the UART
rc=gpiosetfunc(6,2,1)   //TX - set high on default
rc=gpiosetfunc(5,2,0)   //RTS

//The function below is deliberately commented out. Uncomment it if you want to put module into deep sleep.
//rc = SystemStateSet(0)

//------------------------------------------------------------------------------
// Wait for a synchronous event.
// When thr program hits WAITEVENT then it is in standby doze current mode
//------------------------------------------------------------------------------
waitevent       //Waits for an event to happen
