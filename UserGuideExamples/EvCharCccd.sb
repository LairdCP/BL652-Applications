//Example :: EvCharCccd.sb
DIM hMyChar,rc,at$,conHndl

//==============================================================================
// Initialise and instantiate service, characteristic, start adverts
//==============================================================================
FUNCTION OnStartup()
    DIM rc, hSvc, metaSuccess, at$, attr$, adRpt$, addr$, scRpt$
    attr$="Hi"
    DIM svcUuid : svcUuid=0x18EE
    DIM charUuid : charUuid = BleHandleUuid16(1)
    DIM charMet : charMet = BleAttrMetaData(0,0,20,1,metaSuccess)
    DIM hSvcUuid : hSvcUuid = BleHandleUuid16(svcUuid)
    DIM mdCccd : mdCccd = BleAttrMetadata(1,1,2,0,rc)   //CCCD metadata for char

    //Create service
    rc=BleServiceNew(1,hSvcUuid,hSvc)

    //initialise char, write/read enabled, accept signed writes, indicatable
    rc=BleCharNew(0x20,charUuid,charMet,mdCccd,0)

    //commit char initialised above, with initial value "hi" to service 'hMyChar'
    rc=BleCharCommit(hSvc,attr$,hMyChar)

    //commit service to GATT table
    rc=BleServiceCommit(hSvc)

    rc=BleAdvertStart(0,addr$,20,300000,0)
ENDFUNC rc

//==============================================================================
// Close connections so that we can run another app without problems
//==============================================================================
SUB CloseConnections()
    rc=BleDisconnect(conHndl)
    rc=BleAdvertStop()
    rc=GpioUnbindEvent(1)
ENDSUB

//==============================================================================
// Ble event handler
//==============================================================================
FUNCTION HndlrBleMsg(BYVAL nMsgId, BYVAL nCtx)
    conHndl=nCtx
    IF nMsgID==1 THEN
        PRINT "\n\n--- Disconnected from client"
        EXITFUNC 0
    ELSEIF nMsgID==0 THEN
        PRINT "\n--- Connected to client"
    ENDIF
ENDFUNC 1

//==============================================================================
// Indication acknowledgement from client handler
//==============================================================================
FUNCTION HndlrCharHvc(BYVAL charHandle AS INTEGER) AS INTEGER
  IF charHandle == hMyChar THEN
    PRINT "\nGot confirmation of recent indication"
  ELSE
        PRINT "\nGot confirmation of some other indication: ";charHandle
    ENDIF
ENDFUNC 1

//==============================================================================
// Called when data received via the UART
//==============================================================================
FUNCTION HndlrUartRx() AS INTEGER
ENDFUNC 0

//==============================================================================
// CCCD descriptor written handler
//==============================================================================
FUNCTION HndlrCharCccd(BYVAL charHandle, BYVAL nVal) AS INTEGER
    DIM value$
    IF charHandle==hMyChar THEN
        IF nVal & 0x02 THEN
            PRINT "\nIndications have been enabled by client"
            value$="hello"
            IF BleCharValueIndicate(hMyChar,value$)!=0 THEN
                PRINT "\nFailed to indicate new value"
            ENDIF
        ELSE
            PRINT "\nIndications have been disabled by client"
        ENDIF
    ELSE
        PRINT "\nThis is for some other characteristic"
    ENDIF
ENDFUNC 1

ONEVENT  EVBLEMSG    CALL HndlrBleMsg
ONEVENT  EVCHARHVC   CALL HndlrCharHvc
ONEVENT  EVCHARCCCD  CALL HndlrCharCccd
ONEVENT  EVUARTRX    CALL HndlrUartRx

IF OnStartup()==0 THEN
    rc = BleCharValueRead(hMyChar,at$)
    PRINT "\nValue of the characteristic ";hMyChar;" is: ";at$
    PRINT "\nYou can write to the CCCD characteristic."
    PRINT "\nThe BL652 will then indicate a new characteristic value\n"
    PRINT "\n--- Press any key to exit"
ELSE
    PRINT "\nFailure OnStartup"
ENDIF

WAITEVENT

CloseConnections()

PRINT "\nExiting..."