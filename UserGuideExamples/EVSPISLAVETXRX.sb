//Example :: EVSPISLAVETXRX.sb

dim rc, nHandle, st$
dim nLen : nLen = 30 // Try to read 30 bytes of data

//==============================================================================
// This event handler is called when there is SPI Slave data read/written
//==============================================================================
function HndlrSpiSTxRx(nTx, nRx)

    print "\n### Received SPI Slave Data"
	// Try reading data from SPI slave buffer
	rc = SpiSlaveRxBufferRead(nHandle, nLen, st$)
	if rc == 0 then
		if nLen > 0 then
			print "\n### SPI slave Data read: "; st$
		else
			print "\n### No SPI slave data read"
		endif
	else
		print "\n### Failed to read SPI Slave data with error code ";integer.h' rc
	endif

endfunc 1

//******************************************************************************
// Start up code from here -equivalent to main() in a 'C' application
//******************************************************************************
// Open SPI Slave Peripheral
rc = SpiSlaveOpen(nHandle)
if rc == 0 then
	print "\n### SPI Slave peripheral opened successfully"
else
	print "\n### Failed to open SPI Slave peripheral"
endif

//------------------------------------------------------------------------------
// Enable synchronous event handlers
//------------------------------------------------------------------------------
OnEvent  EVSPISLAVETXRX             call HndlrSpiSTxRx

//------------------------------------------------------------------------------
// Wait for a synchronous event.
// An application can have multiple <WaitEvent> statements
//------------------------------------------------------------------------------
WaitEvent