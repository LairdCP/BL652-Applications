//Example :: AesDecrypt.sb
DIM key$, initVector$
DIM inData$, outData$, c$[3]
DIM rc
//Create context for CBC mode, 128 bit
key$="\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F"
initVector$="\FF\01\FF\03\FF\05\FF\07\FF\09\FF\0B\FF\0D\FF\0F"
rc=AesSetKeyIv(0x200,16,key$,initVector$)
IF rc==0 THEN
  PRINT "\nCBC context created successfully"
ELSE
  PRINT "\nFailed to create EBC context"
ENDIF
//encrypt some data
inData$="303132333435363738393A3B3C3D3E3F"
inData$=StrDehexize$(inData$)
rc=AesEncrypt(inData$,c$[0])
IF rc==0 THEN
  PRINT "\nEncrypt OK"
ELSE  
  PRINT "\nFailed to encrypt"
ENDIF
PRINT "\ninData  = "; strhexize$(inData$)
PRINT "\noutData = "; strhexize$(c$[0])
//encrypt same data again
rc=AesEncrypt(inData$,c$[1])
IF rc==0 THEN
  PRINT "\nEncrypt OK"
ELSE  
  PRINT "\nFailed to encrypt"
ENDIF
PRINT "\ninData  = "; strhexize$(inData$)
PRINT "\noutData = "; strhexize$(c$[1])
//encrypt same data again
rc=AesEncrypt(inData$,c$[2])
IF rc==0 THEN
  PRINT "\nEncrypt OK"
ELSE  
  PRINT "\nFailed to encrypt"
ENDIF
PRINT "\ninData  = "; strhexize$(inData$)
PRINT "\noutData = "; strhexize$(c$[2])
//Recreate context for CBC mode, 128 bit
key$="\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F"
initVector$="\FF\01\FF\03\FF\05\FF\07\FF\09\FF\0B\FF\0D\FF\0F"
rc=AesSetKeyIv(0x200,16,key$,initVector$)
IF rc==0 THEN
  PRINT "\nCBC context created successfully"
ELSE
  PRINT "\nFailed to create EBC context"
ENDIF
//now decrypt the data
rc=AesDecrypt(c$[0],outData$)
IF rc==0 THEN
  PRINT "\n**Decrypt OK**"
ELSE  
  PRINT "\nFailed to decrypt"
ENDIF
PRINT "\ninData  = "; strhexize$(c$[0])
PRINT "\noutData = "; strhexize$(outData$)
//now decrypt the data
rc=AesDecrypt(c$[1],outData$)
IF rc==0 THEN
  PRINT "\n**Decrypt OK**"
ELSE  
  PRINT "\nFailed to decrypt"
ENDIF
PRINT "\ninData  = "; strhexize$(c$[1])
PRINT "\noutData = "; strhexize$(outData$)
//now decrypt the data
rc=AesDecrypt(c$[2],outData$)
IF rc==0 THEN
  PRINT "\n**Decrypt OK**"
ELSE  
  PRINT "\nFailed to decrypt"
ENDIF
PRINT "\ninData  = "; strhexize$(c$[2])
PRINT "\noutData = "; strhexize$(outData$)
